#+TITLE: Youtube-dl installer for termux
#+DATE: 2020-05-07
#+AUTHOR: i-use-BSD

* README
#+begin_src sh -n 1 :tangle yes :tangle ./README.md
  # youtube-downloader

  This is a script that installs and configure youtube-dl to download youtube videos using termux in an android device.


  You can simply install this downloader by copy an pasting in termux the next line only after clean termux install (you can install it after installing other programs or repositories but I don garantize it to work beacuse it can interfer with them):

  ```
  pkg install git -y; git clone https://github.com/i-run-arch/youtube-downloader.git; cd youtube-downloader; chmod +x config.bash; ./config.bash && exit
  ```

  Accept the permissions and press enter if asks anything.

  ,**Instructions of use**

  After installing you can go to any youtube video in the youtube app and share it to termux, after finishing downloading the video will be in your internal storage inside the folder "Youtube-downloads"

#+end_src
* Update the base and install dependancies.

** The header
This is a bash script so we start with a bang with the absolute path to the bash executable.

#+begin_src sh -n 1 :tangle yes :tangle ./config.bash
  #!/data/data/com.termux/files/usr/bin/bash
#+end_src

** setup the termux enviroment
We have to setup access to the internal storage on the device. This will have the termux application request permission to access storage on the device. A popup should appear with
#+begin_src sh -n +0 :tangle yes :tangle ./config.bash
  termux-setup-storage
  sleep 10s
#+end_src

We need to update and upgrade the base system. Then we need to install a few packages from the termux repository. Finally we need to install youtube-dl from the pip repository of python applications.
#+begin_src sh -n +0 :tangle yes :tangle ./config.bash
  pkg update && pkg upgrade -y

  pkg install wget curl python ffmpeg -y

  pip install youtube-dl
#+end_src

Setup the folders that are required for easy usage of youtube-dl
#+begin_src sh  -n +0 :tangle yes :tangle ./config.bash
  if [[ ! -d /data/data/com.termux/files/home/storage/shared/Youtube ]]; then
      mkdir -p /data/data/com.termux/files/home/storage/shared/Youtube
  fi
  if [[ ! -d ~/.config/youtube-dl ]]; then
      mkdir -p ~/.config/youtube-dl
  fi
  if [[ ! -d /data/data/com.termux/files/home/bin ]]; then
      mkdir -p ~/bin
  fi
#+end_src

Configure the default behavior of youtube-dl to download 1080p video when no other arguments are given.

#+begin_src sh  -n +0 :tangle yes :tangle ./config.bash
  #This configures the default actions of youtube-dl
  cat >~/.config/youtube-dl/config <<EOF
    -o /data/data/com.termux/files/home/storage/shared/Youtube/%(title)s.%(ext)s -f "best[height<=480]"
  EOF
#+end_src

#+begin_src sh -n +0 :tangle yes :tangle ./config.bash
cat >~/bin/termux-url-opener <<EOF
#+end_src

This is the old spotdl code. Should turn this into a funtion as well.
#+begin_src sh
  if [[ \$URL == *"open.spotify.com"* ]] ; then
      cd ~/storage/shared/Music
      echo "spotify link discovered, running spotify-dl"
      spotdl --song \$URL
  elif [[ \$URL == *"youtu.be"* || \$URL == *"youtube.com"* ]]; then
#+end_src



#+begin_src sh  -n +0 :tangle yes :tangle ./config.bash
  #!/data/data/com.termux/files/usr/bin/bash
  URL=\$1

  #force audio unless specified in read line below.
  if [[ -z \$2 ]]; then
      yesvideo=2
  else
      yesvideo=1
  fi

  # functions
  dl_youtube ()
  {
      cd ~/storage/shared/Youtube || exit
      #for options to download video, uncomment the below line
      #read -p \$'Download video or only audio \n(Select the number and press return) \n 1) Video \n 2) Audio only \n' yesvideo
      if [[ \$yesvideo == 1 ]]; then
          youtube-dl \$URL
      elif [[ \$yesvideo == 2 ]]; then
          echo "attempting to download the Best audio"
          # change webm to m4a to not download opus
          youtube-dl -f 'bestaudio[ext=m4a]' \$URL
      else
          echo "something went wrong and downloading video. Press ctrl+c to cancel."
          youtube-dl \$URL
      fi
  }

  echo "Cracking open the internets"


  case \$URL in
      ,*youtu.be*)
          dl_youtube
          ;;
      ,*youtube.com*)
          dl_youtube
          ;;
      ,*)
          echo "something is wrong. Just grabbing the url with curl"
          cd ~/storage/shared/Downloads || exit
          curl -O \$URL
          ;;
  esac


  read -n 1 -s -p "Press any key to exit... good luck finding it."
  EOF

#+end_src

#+RESULTS:

#+begin_src sh   -n +0 :tangle yes :tangle ./config.bash
echo "Downloading test video. May 3, 2020AM service."
youtube-dl https://youtu.be/52k3IzIFnGQ

echo "there is no process for detecting errors here. What you see is what you get."
read -n 1 -s -p "Press any key to exit..."
#+end_src
