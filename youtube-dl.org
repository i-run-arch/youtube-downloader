#+TITLE: Youtube-dl installer for termux
#+DATE: 2020-05-07
#+AUTHOR: i-use-BSD

* Update the base and install dependancies. 

** The header
This is a bash script so we start with a bang with the absolute path to the bash executable.

#+begin_src sh -n 1 :tangle yes :tangle ./config.bash 
  #!/data/data/com.termux/files/usr/bin/bash
#+end_src

** setup the termux enviroment
We have to setup access to the internal storage on the device. This will have the termux application request permission to access storage on the device. A popup should appear with 
#+begin_src sh -n +0 :tangle yes :tangle ./config.bash
  termux-setup-storage
  sleep 10s
#+end_src

We need to update and upgrade the base system. Then we need to install a few packages from the termux repository. Finally we need to install youtube-dl from the pip repository of python applications.
#+begin_src sh -n +0 :tangle yes :tangle ./config.bash
  pkg update && pkg upgrade -y 

  pkg install wget curl python ffmpeg

  pip install youtube-dl
#+end_src

Setup the folders that are required for easy usage of youtube-dl
#+begin_src sh  -n +0 :tangle yes :tangle ./config.bash
  if [[ ! -d /data/data/com.termux/files/home/storage/shared/Youtube ]]; then
      mkdir -p /data/data/com.termux/files/home/storage/shared/Youtube
  fi
  if [[ ! -d ~/.config/youtube-dl ]]; then
      mkdir -p ~/.config/youtube-dl
  fi
#+end_src

Configure the default behavior of youtube-dl to download 1080p video when no other arguments are given.

#+begin_src sh  -n +0 :tangle yes :tangle ./config.bash
  cat >~/.config/youtube-dl <<EOF
    -o /data/data/com.termux/files/home/storage/shared/Youtube-downloads/%(title)s.%(ext)s -f "best[height<=1080]"
  EOF
#+end_src

#+begin_src sh -n +0 :tangle yes :tangle ./config.bash
cat >~/bin/termux-url-opener <<EOF
#+end_src

This should be 
#+begin_src sh
if [[ $URL == *"open.spotify.com"* ]] ; then
    cd ~/storage/shared/Music
    echo "spotify link discovered, running spotify-dl"
    spotdl --song $URL
elif [[ $URL == *"youtu.be"* || $URL == *"youtube.com"* ]]; then
#+end_src

#+begin_src sh  -n +0 :tangle yes :tangle ./config.bash
  #!/data/data/com.termux.files/usr/bin/bash
  URL=$1

  #force audio unless specified in read line below.
  if [[ -z $2 ]]; then
      yesvideo=2
  else
      yesvideo=1
  fi

  echo "Cracking open the internets"
  # sort by source of URL and run proper command.
  if [[ $URL == *"open.spotify.com"* ]] ; then
      cd ~/storage/shared/Music
      echo "spotify link discovered, running spotify-dl"
      spotdl --song $URL
  elif [[ $URL == *"youtu.be"* || $URL == *"youtube.com"* ]]; then
      cd ~/storage/shared/Youtube
      #for options to download video, uncomment the below line
      #read -p $'Download video or only audio \n(Select the number and press return) \n 1) Video \n 2) Audio only \n' yesvideo
      if [[ $yesvideo ==1 ]]; then
          youtube-dl $URL
      elif [[ $yesvideo == 2 ]]; then
          echo "attempting to download the Best audio"
          # change webm to m4a to not download opus
          youtube-dl -f 'bestaudio[ext=m4a]' $URL
      else
          echo "something went wrong and downloading video. Press ctrl+c to cancel."
          youtube-dl $URL
      fi
  else
      echo "something is wrong. Just grabbing the url with curl"
      cd ~/storage/shared/Downloads
      curl -O $URL
  fi

  read -n 1 -s -p "Press any key to exit... good luck finding it."
  EOF

#+end_src

echo "Downloading test video. May 3, 2020AM service."
youtube-dl https://youtu.be/52k3IzIFnGQ

echo "there is no process for detecting errors here. What you see is what you get."
read -n 1 -s -p "Press any key to exit..."
